#
# Copyright (c) 2010 iceScrum Technologies.
#
# This file is part of iceScrum.
#
# iceScrum is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License.
#
# iceScrum is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with iceScrum.  If not, see <http://www.gnu.org/licenses/>.
#

#Roles
is.role=Role
is.role.productOwner = Product Owner
is.role.scrumMaster = ScrumMaster
is.role.stakeHolder = Stake Holder
is.role.teamMember = Team Member
is.role.owner = Creator
is.role.admin = Admin

#Cliche Object
is.cliche = Cliche

#User object
is.user=User
is.user.firstname=First name
is.user.lastname=Last name
is.user.password=Password
is.user.username=Username
is.user.email=Email
is.user.lastUpdated=Updated profile on
is.user.dateCreated=Created profile on
is.user.updated=Account updated
is.user.teams=Teams
is.user.updated.refreshLanguage=Account updated and refreshing language...
is.user.password.check=Passwords aren't the same
is.user.error.maxusers=Maximum number of users reached on iceScrum, we can't accept your registration
is.user.error.not.saved=The user is not saved
is.user.error.not.exist=The user does not exist
is.user.error.password.check=Passwords aren't the same
is.user.error.reset.password=Error, password has not been reset
is.user.success.register=Your account has been successfully added
is.user.preferences.language=Language
is.user.preferences.activity=Activity
is.user.preferences.error.menuBar=Error while updating your menu bar
is.user.preferences.error.not.filter=Incorrect filter
user.email.email.invalid=Your email is invalid
user.firstName.blank=Your first name is required
user.lastName.blank=Your last name is required
user.password.blank=A password is required
user.username.blank=An username is required
user.email.blank=An email is required
user.username.unique=This username already exists

#BacklogElement object
is.backlogelement=Backlog element
is.backlogelement.id=ID
is.backlogelement.name=Name
is.backlogelement.description=Description
is.backlogelement.notes=Notes
is.backlogelement.creationDate=Creation date
is.backlogelement.attachment=Attachments

#Feature object
is.feature=Feature
is.feature.name=Name
is.feature.rank=Rank
is.feature.type=Type
is.feature.value=Value
is.feature.color=Colour
is.feature.effort=Effort
is.feature.stories=Associated stories
is.feature.stories.finish=Associated and Done stories
is.feature.type.functional=Functional
is.feature.type.architectural=Architectural
is.feature.rank.error=Error while changing rank of the feature
is.feature.error.not.exist=The feature does not exist
is.feature.error.no.deleted=The feature has associated stories
is.feature.error.linked.story=The feature is still linked to stories
is.feature.copy=Feature copied to product backlog
is.feature.saved=Feature saved
is.feature.updated=Feature updated
is.feature.deleted=Feature deleted
feature.name.blank=Error, a feature name is required
feature.name.unique=Error, a feature with the same name already exists

#Story object
is.story=Story
is.story.creator=Creator
is.story.type=Type
is.story.name=Name
is.story.rank=Rank
is.story.effort=Effort
is.story.value=Value
is.story.origin=Origin
is.story.lastUpdated=Last updated on
is.story.template=Story template
is.story.template.as=As
is.story.template.ican=I can
is.story.template.to=to
is.story.dissociated=Story dissociated
is.story.shiftedToNext=Story shifted to next sprint
is.story.declaredAsDone=Story declared as done
is.story.declaredAsUnDone=Story declared as undone
is.story.state=State
is.story.state.suggested=Suggested
is.story.state.accepted=Accepted
is.story.state.estimated=Estimated
is.story.state.planned=Planned
is.story.state.inprogress=In progress
is.story.state.done=Done
is.story.date.suggested=Submitted date
is.story.date.accepted=Accepted date
is.story.date.estimated=Estimated date
is.story.date.planned=Planned date
is.story.date.inprogress=In progress since
is.story.date.done=Done date
is.story.type.story=User story
is.story.type.technical=Technical story
is.story.type.defect=Story defect
is.story.executionFrequency.hour=Hour
is.story.executionFrequency.day=Day
is.story.executionFrequency.week=Week
is.story.executionFrequency.month=Month
is.story.acceptedAsStory=Story accepted and moved to product backlog
is.story.acceptedAsFeature=Story accepted as feature and moved to features
is.story.acceptedAsUrgentTask=Story accepted as urgent task and moved to sprint plan
is.story.saved=Story suggested
is.story.updated=Story updated
is.story.deleted=Story deleted
is.story.error.not.deleted=Error, story was not deleted
is.story.rank.error=Error while changing rank of the story
is.story.error.estimated=Workflow integrity error: cannot change estimation on a story SUGGESTED or DONE.
is.story.error.accepted=Workflow integrity error: this story cannot be accepted in its current state.
is.story.error.not.exist=Story does not exist
is.story.error.not.declareAsDone=Error, story not declared as done
is.story.error.not.acceptedAsUrgentTask=Error, no sprint available to create an urgent task
is.story.error.not.state.suggested=Error, story has not been accepted
is.story.error.not.shiftedToNext=Error, story not shifted to next sprint (no sprint)
is.story.error.declareAsDone.state.not.inProgress = Error, story must be in progress to be done
is.story.error.declareAsUnDone.state.not.done = Error, Story must be done to be move back to undone
story.name.blank=Error, a story name is required
story.name.unique=Error, a story with the same name already exists

is.actor=Actor
is.actor.name=Name
is.actor.satisfaction.criteria=Satisfaction criteria
is.actor.it.level=IT Level
is.actor.use.frequency=Usage frequency
is.actor.instances=Instance(s)
is.actor.nb.stories=Associated stories
is.actor.saved=Actor created and saved
is.actor.updated=Actor updated
is.actor.deleted=Actor deleted
is.actor.error.not.deleted=Error, actor not deleted
is.actor.it.low=Low
is.actor.it.medium=Medium
is.actor.it.high=High
is.actor.use.frequency.hour=Hour
is.actor.use.frequency.day=Day
is.actor.use.frequency.week=Week
is.actor.use.frequency.month=Month
is.actor.use.frequency.quarter=Quarter
is.actor.error.not.exist=Actor does not exist
actor.name.unique=Error, an actor with the same name already exists
actor.name.blank=Error, an actor name is required


#Timebox Object
is.timebox.startDate=Start date
is.timebox.endDate=End date

#Release object
is.release=Release
is.release.name=Release name
is.release.closed=Release Closed
is.release.activated=Release activated
is.release.updated=Release updated
is.release.saved=Release saved
is.release.deleted=Release deleted
is.release.velocity=Velocity
is.release.capacity=Capacity
is.release.endDate=End date
is.release.startDate=Start date
is.release.goal=Release goal
is.release.state=State
is.release.state.wait=Todo
is.release.state.inprogress=In progress
is.release.state.done=Done
is.release.error.no.next=Error, this release is not the next release and cannot be activated
is.release.error.no.sprint=Error, this release doesn't have sprints and cannot be activated
is.release.error.not.state.wait=Error, this release and cannot be activated
is.release.error.not.deleted=Error, this release cannot be deleted
is.release.error.not.exist=Error, release does not exist
is.release.error.update.state.done=Error, cannot update a release in done state
is.release.error.update.startDate.before.endDate=Error, check dates (startDate cannot be before endDate)
is.release.error.update.startDate.equals.endDate=Error, check dates (startDate cannot be equal to endDate)
is.release.error.update.startDate.before.productStartDate=Error, check dates (startDate cannot be before product startDate)
is.release.error.update.startDate.before.previous=Error, check dates (startDate cannot be before previous release startDate)
is.release.error.already.active=Error, this release is already active
is.release.error.sprint.not.done=Error, this release cannot be closed, please check sprints states
is.release.error.vision.not.saved=Error, vision not saved
is.release.error.endDate.before.inprogress.sprint=Error, cannot modify the end date of an IN PROGRESS or DONE sprint
is.release.error.startDate.after.inprogress.sprint=Error, cannot modify the start date of an IN PROGRESS or DONE sprint
is.release.stories.error.not.dissociate=Error while dissociating stories
is.release.stories.dissociate=Stories dissociated
is.release.sprints.generated=Sprints generated
is.release.sprints.not.generated=Error while generating sprints
is.release.error.not.autoplan=Error while planning the release
is.release.autoplan=Planning done
is.release.vision.saved=Release vision saved
is.release.vision=Vision
is.release.empty.vision=No vision currently defined
release.endDate.blank=A release end date is required
release.startDate.blank=A release start date is required
release.name.blank=Error, a release name is required
release.name.unique=Error, a release with the same name already exists

#Sprint object
is.sprint=Sprint
is.sprint.velocity=Velocity
is.sprint.capacity=Capacity
is.sprint.goal=Sprint goal
is.sprint.saved=Sprint saved
is.sprint.updated=Sprint updated
is.sprint.activated=Sprint activated
is.sprint.closed=Sprint closed
is.sprint.deleted=Sprint(s) deleted
is.sprint.resource=Resources
is.sprint.startDate=Start date
is.sprint.endDate=End date
is.sprint.state.wait=Todo
is.sprint.state.inprogress=In progress
is.sprint.state.done=Done
is.sprint.stories.dissociate=Stories dissociated
is.sprint.retrospective=Retrospective
is.sprint.retrospective.copied=Sprint retrospective copied
is.sprint.retrospective.saved=Sprint retrospective saved
is.sprint.doneDefinition=Definition of done
is.sprint.doneDefinition.saved=Definition of done saved
is.sprint.doneDefinition.copied=Definition of done copied
is.sprint.error.not.exist=Sprint does not exist
is.sprint.error.not.saved=Error sprint not saved
is.sprint.error.not.updated=Error while updating the sprint
is.sprint.error.not.deleted=Error while deleting the sprint
is.sprint.error.not.closed=Error while closing the sprint
is.sprint.error.not.activated=Error while activating the sprint
is.sprint.error.declareAsDone.state.not.inProgress=Error, the sprint must be in progress to (un)declare as (un)done a story
is.sprint.error.doneDefinition.not.saved=Error, definition of done not saved
is.sprint.error.retrospective.not.saved=Error, sprint retrospective not saved
is.sprint.error.associate.story.noEstimated=Workflow integrity error: a story must be at least in the ESTIMATED state to be planned.
is.sprint.error.associate.story.done=Workflow integrity error: a story with DONE state cannot be planned again.
is.sprint.error.associate.done=Workflow integrity error: cannot associate a story in a sprint with DONE state.
is.sprint.error.dissociate.story.Done = Workflow integrity error: cannot dissociate a DONE story.
is.sprint.error.doneDefinition.no.previous=Error, no previous definition of done
is.sprint.error.retrospective.no.previous=Error, no previous sprint retrospective
is.sprint.empty.retrospective=No retrospective currently defined
is.sprint.empty.doneDefinition=No definition currently defined
is.sprint.copyRecurrentTasks.copied=Recurrent tasks copied from previous sprint
is.sprint.copyRecurrentTasks.error.no.sprint.before=There is no sprint before this one
is.sprint.copyRecurrentTasks.error.sprint.done=Error, can't copy recurrent tasks on sprint done
is.sprint.copyRecurrentTasks.error.no.recurrent.tasks=Error, no recurrent task on previous sprint
sprint.startDate.blank=Error, a sprint start date is required
sprint.endDate.blank=Error, a sprint end date is required

#Product object
is.product=Project
is.product.name=Project name
is.product.startDate=Start date
is.product.pkey=Key
is.product.template.name=My project
is.product.template.productUID=MYPROJECT
is.product.description=Description
is.product.saved=Project created
is.product.saved.redirect=Project created
is.product.updated=Project updated
is.product.error.not.exist=Project does not exist
is.product.error.not.deleted=Error, while deleting project
is.product.error.startDate.after=A project start date is after project end date
is.product.error.no.estimationSuite=An estimation suite is required
is.product.error.duration=A project must have a valid duration
is.product.error.firstSprint=Invalid first sprint date
is.product.team.new = Do you want to create a new team ?
is.product.preferences.project.hidden=Private project
is.product.preferences.project.newTeams=Accept a new team
is.product.preferences.project.lockPo=Lock product owner role
is.product.preferences.planification.estimationSuite=Suite used for estimation
is.product.preferences.planification.estimatedSprintsDuration=Sprint duration (days)
is.product.preferences.planification.noEstimation=Disable Estimation (effort = 1)
is.product.preferences.sprint.autoDoneStory=Automatically set a story as done when all its tasks are done
is.product.preferences.sprint.autoCreateTaskOnEmptyStory=Auto create task on empty story when sprint is activated
is.product.preferences.sprint.assignOnCreateTask=Auto assign team member on create task
is.product.preferences.sprint.assignOnBeginTask=Auto assign team member on start task
is.product.preferences.sprint.displayRecurrentTasks=Display recurrent tasks
is.product.preferences.sprint.displayUrgentTasks=Display urgent tasks
is.product.preferences.sprint.limitUrgentTasks=Limit of urgent tasks in progress (0 = no limit)
is.product.empty.description = No description currently defined
is.product.erasableByUser = Erase existing project
product.name.unique=Error, a project with the same name already exists
product.name.blank=Error, a project name is required
product.startDate.blank=Error, a project start date is required
product.endDate.blank=Error, a project end date is required
product.pkey.blank=Error, a project key is required
product.pkey.unique=Error, a project the same product key already exists
product.pkey.matches.invalid=Error, a project key must be composed of capital letters and numbers only

#Team Object
is.team = Team
is.team.name = Name
is.team.description=Description
is.team.members=Members
is.team.products=Public Projects
is.team.preferences.allowNewMembers=Allow new members
is.team.preferences.allowRoleChange=Allow role changes
is.team.error.not.saved=The team is not saved
is.team.error.not.exist=The team doesn't exist
team.name.unique=Error, a team with the same name already exists
team.name.blank=Error, a team name is required
is.team.empty.description=No description currently defined

#Task object
is.task = Task
is.task.name = Name
is.task.estimation=Remaining time
is.task.story=Associate with
is.task.type.recurrent=Recurrent task
is.task.type.urgent=Urgent task
is.task.state.wait=Wait
is.task.state.inprogress=In progress
is.task.state.done=Done
is.task.error.saved=Task saved
is.task.error.not.saved=Error while saving task
is.task.error.not.updated=Error while updating task
is.task.error.not.deleted=Error while deleting task
is.task.error.not.taken=Error while taking task
is.task.error.delete.not.scrumMaster=Error, only a scrumMaster can delete a done task
is.task.error.cloned.state.not.done=Error,a task must be done to be cloned
is.task.error.unassign.not.responsible=Error, you are not responsible of the task
is.task.error.unassign.done=Error, you cannot be unassigned on a task done
is.task.saved=Task saved
is.task.updated=Task updated
is.task.deleted=Task deleted
is.task.unassigned=Task unassigned
is.task.recreated=Task re-created
is.task.taken=You are responsible for the task
is.task.creator=Creator
is.task.responsible=Responsible
is.task.state=State
is.task.notes=Notes
is.task.date.inprogress=In progress date
is.task.date.done=Done date
task.name.unique=Error, a task with the same name already exists
task.name.blank=Error, a task name is required